{"version":3,"file":"polpware-ngx-appkit-contracts-alpha.js","sources":["ng://@polpware/ngx-appkit-contracts-alpha/lib/contracts/alert.service-contract.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/contracts/local-store-manager.service-contract.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/contracts/configuration.service-contract.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/services/db-keys.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/services/utilities.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/environments/environment.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/services/service-provider-base.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/services/alert.service-abstract-provider.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/services/translation.service-abstract-provider.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/services/configuration.service-abstract-provider.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/services/local-store-manager.service-abstract-provider.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/services/theme-manager.abstract-provider.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/ngx-appkit-contracts-alpha.module.ts","ng://@polpware/ngx-appkit-contracts-alpha/public-api.ts","ng://@polpware/ngx-appkit-contracts-alpha/polpware-ngx-appkit-contracts-alpha.ts"],"sourcesContent":["import { HttpResponseBase } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface IAlertServiceContract {\n\n\n    showDialog(message: string);\n    showDialog(message: string, type: DialogType, okCallback: (val?: any) => any);\n    showDialog(message: string, type: DialogType, okCallback?: (val?: any) => any, cancelCallback?: () => any, okLabel?: string, cancelLabel?: string, defaultValue?: string);\n    showDialog(message: string, type?: DialogType, okCallback?: (val?: any) => any, cancelCallback?: () => any, okLabel?: string, cancelLabel?: string, defaultValue?: string);\n\n\n    showMessage(summary: string);\n    showMessage(summary: string, detail: string, severity: MessageSeverity);\n    showMessage(summaryAndDetails: string[], summaryAndDetailsSeparator: string, severity: MessageSeverity);\n    showMessage(response: HttpResponseBase, ignoreValue_useNull: string, severity: MessageSeverity);\n    showMessage(data: any, separatorOrDetail?: string, severity?: MessageSeverity);\n\n    showStickyMessage(summary: string);\n    showStickyMessage(summary: string, detail: string, severity: MessageSeverity, error?: any);\n    showStickyMessage(summary: string, detail: string, severity: MessageSeverity, error?: any, onRemove?: () => any);\n    showStickyMessage(summaryAndDetails: string[], summaryAndDetailsSeparator: string, severity: MessageSeverity);\n    showStickyMessage(response: HttpResponseBase, ignoreValue_useNull: string, severity: MessageSeverity);\n    showStickyMessage(data: string | string[] | HttpResponseBase, separatorOrDetail?: string, severity?: MessageSeverity, error?: any, onRemove?: () => any);\n\n    resetStickyMessage();\n\n\n    startLoadingMessage(message: string, caption: string);\n\n    stopLoadingMessage();\n\n\n    logDebug(msg);\n\n    logError(msg);\n\n    logInfo(msg);\n\n    logMessage(msg);\n\n    logTrace(msg);\n\n    logWarning(msg);\n\n    getDialogEvent(): Observable<AlertDialog>;\n\n    getMessageEvent(): Observable<AlertCommand>;\n}\n\n\n// ******************** Dialog ********************//\nexport class AlertDialog {\n    constructor(\n        public message: string,\n        public type: DialogType,\n        public okCallback: (val?: any) => any,\n        public cancelCallback: () => any,\n        public defaultValue: string,\n        public okLabel: string,\n        public cancelLabel: string) {\n\n    }\n}\n\nexport enum DialogType {\n    alert,\n    confirm,\n    prompt\n}\n// ******************** End ********************//\n\n\n// ******************** Growls ********************//\nexport class AlertCommand {\n    constructor(\n        public operation: 'clear' | 'add' | 'add_sticky',\n        public message?: AlertMessage,\n        public onRemove?: () => any) { }\n}\n\nexport class AlertMessage {\n    constructor(\n        public severity: MessageSeverity,\n        public summary: string,\n        public detail: string) { }\n}\n\nexport enum MessageSeverity {\n    default,\n    info,\n    success,\n    error,\n    warn,\n    wait\n}\n// ******************** End ********************//\n","\nimport { Observable } from 'rxjs';\n\n/**\n* Provides a wrapper for accessing the web storage API and synchronizing session storage across tabs/windows.\n*/\nexport interface ILocalStoreManagerContract {\n\n    initialiseStorageSyncListener();\n\n    deinitialiseStorageSyncListener();\n\n    clearAllStorage();\n\n    clearAllSessionsStorage();\n\n    clearInstanceSessionStorage();\n\n    clearLocalStorage();\n\n    saveSessionData(data: any, key: string);\n\n    saveSyncedSessionData(data: any, key: string);\n\n    savePermanentData(data: any, key: string);\n\n    moveDataToSessionStorage(key: string);\n\n    moveDataToSyncedSessionStorage(key: string);\n\n    moveDataToPermanentStorage(key: string);\n\n    exists(key: string);\n\n    getData(key: string);\n\n    getDataObject<T>(key: string, isDateType: boolean);\n\n    deleteData(key: string);\n\n    getInitEvent(): Observable<{}>;\n}\n\nexport class StorageManagerConstants {\n    public static readonly DBKEY_USER_DATA = 'user_data';\n}    \n","export interface UserConfiguration {\n    language: string;\n    homeUrl: string;\n    themeId: number;\n    showDashboardStatistics: boolean;\n    showDashboardNotifications: boolean;\n    showDashboardTodo: boolean;\n    showDashboardBanner: boolean;\n}\n\nexport interface IConfigurationServiceContract {\n\n    language: string;\n    themeId: number;\n    homeUrl: string;\n    showDashboardStatistics: boolean;\n    showDashboardNotifications: boolean;\n    showDashboardTodo: boolean;\n    showDashboardBanner: boolean;\n\n\n    baseUrl: string;\n    tokenUrl: string;\n    loginUrl: string;\n    fallbackBaseUrl: string;\n    // ***End of defaults***\n\n    configurationImported$;\n\n    import(jsonValue: string);\n\n    export(changesOnly): string;\n\n    clearLocalChanges();\n\n}\n\nexport class ConfigurationServiceConstants {\n\n    public static appVersion: string = '3.1.0';\n\n    // ***Specify default configurations here***\n    public static defaultLanguage: string = 'en';\n    public static defaultHomeUrl: string = '/home';\n    public static defaultThemeId: number = 1;\n    public static defaultShowDashboardStatistics: boolean = true;\n    public static defaultShowDashboardNotifications: boolean = true;\n    public static defaultShowDashboardTodo: boolean = false;\n    public static defaultShowDashboardBanner: boolean = true;\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DBkeys {\n\n    public static readonly CURRENT_USER = 'current_user';\n    public static readonly USER_PERMISSIONS = 'user_permissions';\n    public static readonly ACCESS_TOKEN = 'access_token';\n    public static readonly REFRESH_TOKEN = 'refresh_token';\n    public static readonly TOKEN_EXPIRES_IN = 'expires_in';\n\n    public static readonly REMEMBER_ME = 'remember_me';\n\n    public static readonly LANGUAGE = 'language';\n    public static readonly HOME_URL = 'home_url';\n    public static readonly THEME_ID = 'themeId';\n    public static readonly SHOW_DASHBOARD_STATISTICS = 'show_dashboard_statistics';\n    public static readonly SHOW_DASHBOARD_NOTIFICATIONS = 'show_dashboard_notifications';\n    public static readonly SHOW_DASHBOARD_TODO = 'show_dashboard_todo';\n    public static readonly SHOW_DASHBOARD_BANNER = 'show_dashboard_banner';\n}\n","import { Injectable } from '@angular/core';\nimport { HttpResponseBase, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Utilities {\n    public static readonly captionAndMessageSeparator = ':';\n    public static readonly noNetworkMessageCaption = 'No Network';\n    public static readonly noNetworkMessageDetail = 'The server cannot be reached';\n    public static readonly accessDeniedMessageCaption = 'Access Denied!';\n    public static readonly accessDeniedMessageDetail = '';\n    public static readonly notFoundMessageCaption = 'Not Found';\n    public static readonly notFoundMessageDetail = 'The target resource cannot be found';\n\n    public static cookies =\n        {\n            getItem: (sKey) => {\n                return decodeURIComponent(document.cookie.replace(new RegExp('(?:(?:^|.*;)\\\\s*' + encodeURIComponent(sKey).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') + '\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$'), '$1')) || null;\n            },\n            setItem: (sKey, sValue, vEnd, sPath, sDomain, bSecure) => {\n                if (!sKey || /^(?:expires|max\\-age|path|domain|secure)$/i.test(sKey)) {\n                    return false;\n                }\n\n                let sExpires = '';\n\n                if (vEnd) {\n                    switch (vEnd.constructor) {\n                        case Number:\n                            sExpires = vEnd === Infinity ? '; expires=Fri, 31 Dec 9999 23:59:59 GMT' : '; max-age=' + vEnd;\n                            break;\n                        case String:\n                            sExpires = '; expires=' + vEnd;\n                            break;\n                        case Date:\n                            sExpires = '; expires=' + vEnd.toUTCString();\n                            break;\n                    }\n                }\n\n                document.cookie = encodeURIComponent(sKey) + '=' + encodeURIComponent(sValue) + sExpires + (sDomain ? '; domain=' + sDomain : '') + (sPath ? '; path=' + sPath : '') + (bSecure ? '; secure' : '');\n                return true;\n            },\n            removeItem: (sKey, sPath, sDomain) => {\n                if (!sKey) {\n                    return false;\n                }\n                document.cookie = encodeURIComponent(sKey) + '=; expires=Thu, 01 Jan 1970 00:00:00 GMT' + (sDomain ? '; domain=' + sDomain : '') + (sPath ? '; path=' + sPath : '');\n                return true;\n            },\n            hasItem: (sKey) => {\n                return (new RegExp('(?:^|;\\\\s*)' + encodeURIComponent(sKey).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') + '\\\\s*\\\\=')).test(document.cookie);\n            },\n            keys: () => {\n                const aKeys = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, '').split(/\\s*(?:\\=[^;]*)?;\\s*/);\n                for (let nIdx = 0; nIdx < aKeys.length; nIdx++) { aKeys[nIdx] = decodeURIComponent(aKeys[nIdx]); }\n                return aKeys;\n            }\n        };\n\n    public static getHttpResponseMessages(data: HttpResponseBase | any): string[] {\n        const responses: string[] = [];\n\n        if (data instanceof HttpResponseBase) {\n            if (this.checkNoNetwork(data)) {\n                responses.push(`${this.noNetworkMessageCaption}${this.captionAndMessageSeparator} ${this.noNetworkMessageDetail}`);\n            } else {\n                const responseObject = this.getResponseBody(data);\n\n                if (responseObject && (typeof responseObject === 'object' || responseObject instanceof Object)) {\n\n                    for (const key in responseObject) {\n                        if (key) {\n                            responses.push(`${key}${this.captionAndMessageSeparator} ${responseObject[key]}`);\n                        } else if (responseObject[key]) {\n                            responses.push(responseObject[key].toString());\n                        }\n                    }\n                }\n            }\n\n            if (!responses.length) {\n                if ((data as any).body) {\n                    responses.push(`body: ${(data as any).body}`);\n                }\n\n                if ((data as any).error) {\n                    responses.push(`error: ${(data as any).error}`);\n                }\n            }\n        }\n\n        if (!responses.length) {\n            if (this.getResponseBody(data)) {\n                responses.push(this.getResponseBody(data).toString());\n            } else {\n                responses.push(data.toString());\n            }\n        }\n\n        if (this.checkAccessDenied(data)) {\n            responses.splice(0, 0, `${this.accessDeniedMessageCaption}${this.captionAndMessageSeparator} ${this.accessDeniedMessageDetail}`);\n        }\n\n        if (this.checkNotFound(data)) {\n            let message = `${this.notFoundMessageCaption}${this.captionAndMessageSeparator} ${this.notFoundMessageDetail}`;\n            if (data.url) {\n                message += `. ${data.url}`;\n            }\n\n            responses.splice(0, 0, message);\n        }\n\n        return responses;\n    }\n\n    public static getHttpResponseMessage(data: HttpResponseBase | any): string {\n        const httpMessage =\n            Utilities.findHttpResponseMessage(Utilities.noNetworkMessageCaption, data) ||\n            Utilities.findHttpResponseMessage(Utilities.notFoundMessageCaption, data) ||\n            Utilities.findHttpResponseMessage('error_description', data) ||\n            Utilities.findHttpResponseMessage('error', data) ||\n            Utilities.getHttpResponseMessages(data).join();\n\n        return httpMessage;\n    }\n\n    public static findHttpResponseMessage(messageToFind: string, data: HttpResponse<any> | any, seachInCaptionOnly = true, includeCaptionInResult = false): string {\n        const searchString = messageToFind.toLowerCase();\n        const httpMessages = this.getHttpResponseMessages(data);\n\n        for (const message of httpMessages) {\n            const fullMessage = Utilities.splitInTwo(message, this.captionAndMessageSeparator);\n\n            if (fullMessage.firstPart && fullMessage.firstPart.toLowerCase().indexOf(searchString) != -1) {\n                return includeCaptionInResult ? message : fullMessage.secondPart || fullMessage.firstPart;\n            }\n        }\n\n        if (!seachInCaptionOnly) {\n            for (const message of httpMessages) {\n\n                if (message.toLowerCase().indexOf(searchString) != -1) {\n                    if (includeCaptionInResult) {\n                        return message;\n                    } else {\n                        const fullMessage = Utilities.splitInTwo(message, this.captionAndMessageSeparator);\n                        return fullMessage.secondPart || fullMessage.firstPart;\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    public static getResponseBody(response: HttpResponseBase) {\n        if (response instanceof HttpResponse) {\n            return response.body;\n        }\n\n        if (response instanceof HttpErrorResponse) {\n            return response.error || response.message || response.statusText;\n        }\n    }\n\n    public static checkNoNetwork(response: HttpResponseBase) {\n        if (response instanceof HttpResponseBase) {\n            return response.status == 0;\n        }\n\n        return false;\n    }\n\n    public static checkAccessDenied(response: HttpResponseBase) {\n        if (response instanceof HttpResponseBase) {\n            return response.status == 403;\n        }\n\n        return false;\n    }\n\n    public static checkNotFound(response: HttpResponseBase) {\n        if (response instanceof HttpResponseBase) {\n            return response.status == 404;\n        }\n\n        return false;\n    }\n\n    public static checkIsLocalHost(url: string, base?: string) {\n        if (url) {\n            const location = new URL(url, base);\n            return location.hostname === 'localhost' || location.hostname === '127.0.0.1';\n        }\n\n        return false;\n    }\n\n    public static getQueryParamsFromString(paramString: string) {\n        if (!paramString) {\n            return null;\n        }\n\n        const params: { [key: string]: string } = {};\n\n        for (const param of paramString.split('&')) {\n            const keyValue = Utilities.splitInTwo(param, '=');\n            params[keyValue.firstPart] = keyValue.secondPart;\n        }\n\n        return params;\n    }\n\n    public static splitInTwo(text: string, separator: string): { firstPart: string, secondPart: string } {\n        const separatorIndex = text.indexOf(separator);\n\n        if (separatorIndex == -1) {\n            return { firstPart: text, secondPart: null };\n        }\n\n        const part1 = text.substr(0, separatorIndex).trim();\n        const part2 = text.substr(separatorIndex + 1).trim();\n\n        return { firstPart: part1, secondPart: part2 };\n    }\n\n    public static safeStringify(object) {\n\n        let result: string;\n\n        try {\n            result = JSON.stringify(object);\n            return result;\n        } catch (error) {\n\n        }\n\n        const simpleObject = {};\n\n        for (const prop in object) {\n            if (!object.hasOwnProperty(prop)) {\n                continue;\n            }\n            if (typeof (object[prop]) == 'object') {\n                continue;\n            }\n            if (typeof (object[prop]) == 'function') {\n                continue;\n            }\n            simpleObject[prop] = object[prop];\n        }\n\n        result = '[***Sanitized Object***]: ' + JSON.stringify(simpleObject);\n\n        return result;\n    }\n\n    public static JsonTryParse(value: string) {\n        try {\n            return JSON.parse(value);\n        } catch (e) {\n            if (value === 'undefined') {\n                return void 0;\n            }\n            return value;\n        }\n    }\n\n    public static TestIsObjectEmpty(obj: any) {\n        for (const prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    public static TestIsUndefined(value: any) {\n        return typeof value === 'undefined';\n        // return value === undefined;\n    }\n\n    public static TestIsString(value: any) {\n        return typeof value === 'string' || value instanceof String;\n    }\n\n    public static capitalizeFirstLetter(text: string) {\n        if (text) {\n            return text.charAt(0).toUpperCase() + text.slice(1);\n        } else {\n            return text;\n        }\n    }\n\n    public static toTitleCase(text: string) {\n        return text.replace(/\\w\\S*/g, (subString) => {\n            return subString.charAt(0).toUpperCase() + subString.substr(1).toLowerCase();\n        });\n    }\n\n    public static toLowerCase(items: string);\n    public static toLowerCase(items: string[]);\n    public static toLowerCase(items: any): string | string[] {\n\n        if (items instanceof Array) {\n            const loweredRoles: string[] = [];\n\n            for (let i = 0; i < items.length; i++) {\n                loweredRoles[i] = items[i].toLowerCase();\n            }\n\n            return loweredRoles;\n        } else if (typeof items === 'string' || items instanceof String) {\n            return items.toLowerCase();\n        }\n    }\n\n    public static uniqueId() {\n        return this.randomNumber(1000000, 9000000).toString();\n    }\n\n    public static randomNumber(min: number, max: number) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n\n    public static baseUrl() {\n        let base = '';\n\n        if (window.location.origin) {\n            base = window.location.origin;\n        } else {\n            base = window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n        }\n\n        return base.replace(/\\/$/, '');\n    }\n\n    public static printDateOnly(date: Date) {\n\n        date = new Date(date);\n\n        const dayNames = new Array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday');\n        const monthNames = new Array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December');\n\n        const dayOfWeek = date.getDay();\n        const dayOfMonth = date.getDate();\n        let sup = '';\n        const month = date.getMonth();\n        const year = date.getFullYear();\n\n        if (dayOfMonth == 1 || dayOfMonth == 21 || dayOfMonth == 31) {\n            sup = 'st';\n        } else if (dayOfMonth == 2 || dayOfMonth == 22) {\n            sup = 'nd';\n        } else if (dayOfMonth == 3 || dayOfMonth == 23) {\n            sup = 'rd';\n        } else {\n            sup = 'th';\n        }\n\n        const dateString = dayNames[dayOfWeek] + ', ' + dayOfMonth + sup + ' ' + monthNames[month] + ' ' + year;\n\n        return dateString;\n    }\n\n    public static printTimeOnly(date: Date) {\n\n        date = new Date(date);\n\n        let period = '';\n        let minute = date.getMinutes().toString();\n        let hour = date.getHours();\n\n        period = hour < 12 ? 'AM' : 'PM';\n\n        if (hour == 0) {\n            hour = 12;\n        }\n        if (hour > 12) {\n            hour = hour - 12;\n        }\n\n        if (minute.length == 1) {\n            minute = '0' + minute;\n        }\n\n        const timeString = hour + ':' + minute + ' ' + period;\n\n\n        return timeString;\n    }\n\n    public static printDate(date: Date, separator = 'at') {\n        return `${Utilities.printDateOnly(date)} ${separator} ${Utilities.printTimeOnly(date)}`;\n    }\n\n    public static printFriendlyDate(date: Date, separator = '-') {\n        const today = new Date(); today.setHours(0, 0, 0, 0);\n        const yesterday = new Date(today); yesterday.setDate(yesterday.getDate() - 1);\n        const test = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n        if (test.toDateString() == today.toDateString()) {\n            return `Today ${separator} ${Utilities.printTimeOnly(date)}`;\n        }\n        if (test.toDateString() == yesterday.toDateString()) {\n            return `Yesterday ${separator} ${Utilities.printTimeOnly(date)}`;\n        } else {\n            return Utilities.printDate(date, separator);\n        }\n    }\n\n    public static printShortDate(date: Date, separator = '/', dateTimeSeparator = '-') {\n\n        let day = date.getDate().toString();\n        let month = (date.getMonth() + 1).toString();\n        const year = date.getFullYear();\n\n        if (day.length == 1) {\n            day = '0' + day;\n        }\n\n        if (month.length == 1) {\n            month = '0' + month;\n        }\n\n        return `${month}${separator}${day}${separator}${year} ${dateTimeSeparator} ${Utilities.printTimeOnly(date)}`;\n    }\n\n    public static parseDate(date) {\n\n        if (date) {\n\n            if (date instanceof Date) {\n                return date;\n            }\n\n            if (typeof date === 'string' || date instanceof String) {\n                if (date.search(/[a-su-z+]/i) == -1) {\n                    date = date + 'Z';\n                }\n\n                return new Date(date);\n            }\n\n            if (typeof date === 'number' || date instanceof Number) {\n                return new Date(date as any);\n            }\n        }\n    }\n\n    public static printDuration(start: Date, end: Date) {\n\n        start = new Date(start);\n        end = new Date(end);\n\n        // get total seconds between the times\n        let delta = Math.abs(start.valueOf() - end.valueOf()) / 1000;\n\n        // calculate (and subtract) whole days\n        const days = Math.floor(delta / 86400);\n        delta -= days * 86400;\n\n        // calculate (and subtract) whole hours\n        const hours = Math.floor(delta / 3600) % 24;\n        delta -= hours * 3600;\n\n        // calculate (and subtract) whole minutes\n        const minutes = Math.floor(delta / 60) % 60;\n        delta -= minutes * 60;\n\n        // what's left is seconds\n        const seconds = delta % 60;  // in theory the modulus is not required\n\n\n        let printedDays = '';\n\n        if (days) {\n            printedDays = `${days} days`;\n        }\n\n        if (hours) {\n            printedDays += printedDays ? `, ${hours} hours` : `${hours} hours`;\n        }\n\n        if (minutes) {\n            printedDays += printedDays ? `, ${minutes} minutes` : `${minutes} minutes`;\n        }\n\n        if (seconds) {\n            printedDays += printedDays ? ` and ${seconds} seconds` : `${seconds} seconds`;\n        }\n\n\n        if (!printedDays) {\n            printedDays = '0';\n        }\n\n        return printedDays;\n    }\n\n    public static getAge(birthDate, otherDate) {\n        birthDate = new Date(birthDate);\n        otherDate = new Date(otherDate);\n\n        let years = (otherDate.getFullYear() - birthDate.getFullYear());\n\n        if (otherDate.getMonth() < birthDate.getMonth() ||\n            otherDate.getMonth() == birthDate.getMonth() && otherDate.getDate() < birthDate.getDate()) {\n            years--;\n        }\n\n        return years;\n    }\n\n    public static searchArray(searchTerm: string, caseSensitive: boolean, ...values: any[]) {\n        if (!searchTerm) {\n            return true;\n        }\n\n        let filter = searchTerm.trim();\n        let data = values.join();\n\n        if (!caseSensitive) {\n            filter = filter.toLowerCase();\n            data = data.toLowerCase();\n        }\n\n        return data.indexOf(filter) != -1;\n    }\n\n    public static moveArrayItem(array: any[], oldIndex, newIndex) {\n\n        if (oldIndex < 0) {\n            return;\n        }\n\n        if (newIndex < 0) {\n            newIndex += array.length;\n        }\n\n        if (newIndex >= array.length) {\n            let k = newIndex - array.length;\n            while ((k--) + 1) {\n                array.push(undefined);\n            }\n        }\n\n        array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);\n    }\n\n    public static expandCamelCase(text: string) {\n\n        if (!text) {\n            return text;\n        }\n\n        return text.replace(/([A-Z][a-z]+)/g, ' $1')\n            .replace(/([A-Z][A-Z]+)/g, ' $1')\n            .replace(/([^A-Za-z ]+)/g, ' $1');\n    }\n\n    public static testIsAbsoluteUrl(url: string) {\n\n        const r = new RegExp('^(?:[a-z]+:)?//', 'i');\n        return r.test(url);\n    }\n\n    public static convertToAbsoluteUrl(url: string) {\n\n        return Utilities.testIsAbsoluteUrl(url) ? url : '//' + url;\n    }\n\n    public static removeNulls(obj) {\n        const isArray = obj instanceof Array;\n\n        for (const k in obj) {\n            if (obj[k] === null) {\n                isArray ? obj.splice(k, 1) : delete obj[k];\n            } else if (typeof obj[k] == 'object') {\n                Utilities.removeNulls(obj[k]);\n            }\n\n            if (isArray && obj.length == k) {\n                Utilities.removeNulls(obj);\n            }\n        }\n\n        return obj;\n    }\n\n    public static debounce(func: (...args) => any, wait: number, immediate?: boolean) {\n        let timeout;\n\n        return function() {\n            const context = this;\n            const args_ = arguments;\n\n            const later = function() {\n                timeout = null;\n                if (!immediate) {\n                    func.apply(context, args_);\n                }\n            };\n\n            const callNow = immediate && !timeout;\n\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n\n            if (callNow) {\n                func.apply(context, args_);\n            }\n        };\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    baseUrl: null, // Change this to the address of your backend API if different from frontend address\n    tokenUrl: null, // For IdentityServer/Authorization Server API. You can set to null if same as baseUrl\n    loginUrl: '/login'\n};\n","export abstract class ServiceProviderBase<T> {\n    abstract get(): T;\n}\n","import { Injectable } from '@angular/core';\nimport { ServiceProviderBase } from './service-provider-base';\nimport { IAlertServiceContract } from '../contracts/alert.service-contract';\n\n@Injectable()\nexport abstract class AlertServiceAbstractProvider\n    extends ServiceProviderBase<IAlertServiceContract> {\n}\n\n","import { Injectable } from '@angular/core';\nimport { ServiceProviderBase } from './service-provider-base';\nimport { ITranslationServiceContract } from '../contracts/translation.service-contract';\n\n@Injectable()\nexport abstract class TranslationServiceAbstractProvider\n    extends ServiceProviderBase<ITranslationServiceContract> {\n}\n","import { Injectable } from '@angular/core';\nimport { ServiceProviderBase } from './service-provider-base';\nimport { IConfigurationServiceContract } from '../contracts/configuration.service-contract';\n\n@Injectable()\nexport abstract class ConfigurationServiceAbstractProvider\n    extends ServiceProviderBase<IConfigurationServiceContract> {\n}\n","import { Injectable } from '@angular/core';\nimport { ServiceProviderBase } from './service-provider-base';\nimport { ILocalStoreManagerContract } from '../contracts/local-store-manager.service-contract';\n\n@Injectable()\nexport abstract class LocalStoreManagerServiceAbstractProvider\n    extends ServiceProviderBase<ILocalStoreManagerContract> {\n}\n","import { Injectable } from '@angular/core';\nimport { ServiceProviderBase } from './service-provider-base';\nimport { IThemeManagerContract } from '../contracts/theme-manager.contract';\n\n@Injectable()\nexport abstract class ThemeManagerAbstractProvider\n    extends ServiceProviderBase<IThemeManagerContract> {\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n    declarations: [],\n    imports: [\n    ],\n    exports: [],\n    providers: [\n    ]\n})\nexport class NgxAppkitContractsAlphaModule { }\n","/*\n * Public API Surface of ngx-appkit-contracts-alpha\n */\n\nexport * from './lib/contracts/alert.service-contract';\nexport * from './lib/contracts/translation.service-contract';\nexport * from './lib/models/app-theme.model';\nexport * from './lib/contracts/theme-manager.contract';\nexport * from './lib/contracts/local-store-manager.service-contract';\nexport * from './lib/contracts/configuration.service-contract';\nexport * from './lib/services/db-keys';\nexport * from './lib/services/utilities';\nexport * from './lib/environments/environment';\n\nexport * from './lib/services/alert.service-abstract-provider';\nexport * from './lib/services/service-provider-base';\nexport * from './lib/services/translation.service-abstract-provider';\nexport * from './lib/services/configuration.service-abstract-provider';\nexport * from './lib/services/local-store-manager.service-abstract-provider';\nexport * from './lib/services/theme-manager.abstract-provider';\n\nexport * from './lib/ngx-appkit-contracts-alpha.module';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}