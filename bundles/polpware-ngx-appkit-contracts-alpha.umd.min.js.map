{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@polpware/ngx-appkit-contracts-alpha/lib/contracts/alert.service-contract.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/contracts/local-store-manager.service-contract.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/contracts/configuration.service-contract.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/services/db-keys.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/services/utilities.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/environments/environment.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/services/service-provider-base.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/services/alert.service-abstract-provider.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/services/translation.service-abstract-provider.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/services/configuration.service-abstract-provider.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/services/local-store-manager.service-abstract-provider.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/services/theme-manager.abstract-provider.ts","ng://@polpware/ngx-appkit-contracts-alpha/lib/ngx-appkit-contracts-alpha.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","message","type","okCallback","cancelCallback","defaultValue","okLabel","cancelLabel","DialogType","alert","confirm","prompt","operation","onRemove","AlertMessage","severity","summary","detail","MessageSeverity","default","info","success","error","warn","wait","StorageManagerConstants","DBKEY_USER_DATA","ConfigurationServiceConstants","appVersion","defaultLanguage","defaultHomeUrl","defaultThemeId","defaultShowDashboardStatistics","defaultShowDashboardNotifications","defaultShowDashboardTodo","defaultShowDashboardBanner","DBkeys","CURRENT_USER","USER_PERMISSIONS","ACCESS_TOKEN","REFRESH_TOKEN","TOKEN_EXPIRES_IN","REMEMBER_ME","LANGUAGE","HOME_URL","THEME_ID","SHOW_DASHBOARD_STATISTICS","SHOW_DASHBOARD_NOTIFICATIONS","SHOW_DASHBOARD_TODO","SHOW_DASHBOARD_BANNER","Injectable","Utilities","getHttpResponseMessages","data","responses","HttpResponseBase","checkNoNetwork","push","noNetworkMessageCaption","captionAndMessageSeparator","noNetworkMessageDetail","responseObject","getResponseBody","key","toString","body","checkAccessDenied","splice","accessDeniedMessageCaption","accessDeniedMessageDetail","checkNotFound","notFoundMessageCaption","notFoundMessageDetail","url","getHttpResponseMessage","findHttpResponseMessage","join","messageToFind","seachInCaptionOnly","includeCaptionInResult","searchString","toLowerCase","httpMessages","httpMessages_1","tslib_1.__values","httpMessages_1_1","fullMessage","splitInTwo","firstPart","indexOf","secondPart","httpMessages_2","httpMessages_2_1","response","HttpResponse","HttpErrorResponse","statusText","status","checkIsLocalHost","base","location_1","URL","hostname","getQueryParamsFromString","paramString","params","_b","split","_c","param","keyValue","text","separator","separatorIndex","substr","trim","safeStringify","object","JSON","stringify","simpleObject","prop","JsonTryParse","parse","e","TestIsObjectEmpty","obj","TestIsUndefined","TestIsString","String","capitalizeFirstLetter","charAt","toUpperCase","slice","toTitleCase","replace","subString","items","loweredRoles","uniqueId","randomNumber","min","max","Math","floor","random","baseUrl","window","location","origin","protocol","port","printDateOnly","date","Date","dayNames","monthNames","dayOfWeek","getDay","dayOfMonth","getDate","sup","month","getMonth","year","getFullYear","printTimeOnly","period","minute","getMinutes","hour","getHours","printDate","printFriendlyDate","today","setHours","yesterday","setDate","test","toDateString","printShortDate","dateTimeSeparator","day","parseDate","search","Number","printDuration","start","end","delta","abs","valueOf","days","hours","minutes","seconds","printedDays","getAge","birthDate","otherDate","years","searchArray","searchTerm","caseSensitive","values","_i","arguments","filter","moveArrayItem","array","oldIndex","newIndex","k","undefined","expandCamelCase","testIsAbsoluteUrl","RegExp","convertToAbsoluteUrl","removeNulls","isArray","debounce","func","immediate","timeout","context","args_","later","apply","callNow","clearTimeout","setTimeout","cookies","getItem","sKey","decodeURIComponent","document","cookie","encodeURIComponent","setItem","sValue","vEnd","sPath","sDomain","bSecure","sExpires","Infinity","toUTCString","removeItem","hasItem","keys","aKeys","nIdx","AlertServiceAbstractProvider","_super","tslib_1.__extends","ServiceProviderBase","TranslationServiceAbstractProvider","ConfigurationServiceAbstractProvider","LocalStoreManagerServiceAbstractProvider","ThemeManagerAbstractProvider","NgxAppkitContractsAlphaModule","NgModule","args","declarations","imports","exports","providers","production","tokenUrl","loginUrl"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { HttpResponseBase } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface IAlertServiceContract {\n\n\n    showDialog(message: string);\n    showDialog(message: string, type: DialogType, okCallback: (val?: any) => any);\n    showDialog(message: string, type: DialogType, okCallback?: (val?: any) => any, cancelCallback?: () => any, okLabel?: string, cancelLabel?: string, defaultValue?: string);\n    showDialog(message: string, type?: DialogType, okCallback?: (val?: any) => any, cancelCallback?: () => any, okLabel?: string, cancelLabel?: string, defaultValue?: string);\n\n\n    showMessage(summary: string);\n    showMessage(summary: string, detail: string, severity: MessageSeverity);\n    showMessage(summaryAndDetails: string[], summaryAndDetailsSeparator: string, severity: MessageSeverity);\n    showMessage(response: HttpResponseBase, ignoreValue_useNull: string, severity: MessageSeverity);\n    showMessage(data: any, separatorOrDetail?: string, severity?: MessageSeverity);\n\n    showStickyMessage(summary: string);\n    showStickyMessage(summary: string, detail: string, severity: MessageSeverity, error?: any);\n    showStickyMessage(summary: string, detail: string, severity: MessageSeverity, error?: any, onRemove?: () => any);\n    showStickyMessage(summaryAndDetails: string[], summaryAndDetailsSeparator: string, severity: MessageSeverity);\n    showStickyMessage(response: HttpResponseBase, ignoreValue_useNull: string, severity: MessageSeverity);\n    showStickyMessage(data: string | string[] | HttpResponseBase, separatorOrDetail?: string, severity?: MessageSeverity, error?: any, onRemove?: () => any);\n\n    resetStickyMessage();\n\n\n    startLoadingMessage(message: string, caption: string);\n\n    stopLoadingMessage();\n\n\n    logDebug(msg);\n\n    logError(msg);\n\n    logInfo(msg);\n\n    logMessage(msg);\n\n    logTrace(msg);\n\n    logWarning(msg);\n\n    getDialogEvent(): Observable<AlertDialog>;\n\n    getMessageEvent(): Observable<AlertCommand>;\n}\n\n\n// ******************** Dialog ********************//\nexport class AlertDialog {\n    constructor(\n        public message: string,\n        public type: DialogType,\n        public okCallback: (val?: any) => any,\n        public cancelCallback: () => any,\n        public defaultValue: string,\n        public okLabel: string,\n        public cancelLabel: string) {\n\n    }\n}\n\nexport enum DialogType {\n    alert,\n    confirm,\n    prompt\n}\n// ******************** End ********************//\n\n\n// ******************** Growls ********************//\nexport class AlertCommand {\n    constructor(\n        public operation: 'clear' | 'add' | 'add_sticky',\n        public message?: AlertMessage,\n        public onRemove?: () => any) { }\n}\n\nexport class AlertMessage {\n    constructor(\n        public severity: MessageSeverity,\n        public summary: string,\n        public detail: string) { }\n}\n\nexport enum MessageSeverity {\n    default,\n    info,\n    success,\n    error,\n    warn,\n    wait\n}\n// ******************** End ********************//\n","\nimport { Observable } from 'rxjs';\n\n/**\n* Provides a wrapper for accessing the web storage API and synchronizing session storage across tabs/windows.\n*/\nexport interface ILocalStoreManagerContract {\n\n    initialiseStorageSyncListener();\n\n    deinitialiseStorageSyncListener();\n\n    clearAllStorage();\n\n    clearAllSessionsStorage();\n\n    clearInstanceSessionStorage();\n\n    clearLocalStorage();\n\n    saveSessionData(data: any, key: string);\n\n    saveSyncedSessionData(data: any, key: string);\n\n    savePermanentData(data: any, key: string);\n\n    moveDataToSessionStorage(key: string);\n\n    moveDataToSyncedSessionStorage(key: string);\n\n    moveDataToPermanentStorage(key: string);\n\n    exists(key: string);\n\n    getData(key: string);\n\n    getDataObject<T>(key: string, isDateType: boolean);\n\n    deleteData(key: string);\n\n    getInitEvent(): Observable<{}>;\n}\n\nexport class StorageManagerConstants {\n    public static readonly DBKEY_USER_DATA = 'user_data';\n}    \n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nexport interface UserConfiguration {\n    language: string;\n    homeUrl: string;\n    themeId: number;\n    showDashboardStatistics: boolean;\n    showDashboardNotifications: boolean;\n    showDashboardTodo: boolean;\n    showDashboardBanner: boolean;\n}\n\nexport interface IConfigurationServiceContract {\n\n    language: string;\n    themeId: number;\n    homeUrl: string;\n    showDashboardStatistics: boolean;\n    showDashboardNotifications: boolean;\n    showDashboardTodo: boolean;\n    showDashboardBanner: boolean;\n\n\n    baseUrl: string;\n    tokenUrl: string;\n    loginUrl: string;\n    fallbackBaseUrl: string;\n    // ***End of defaults***\n\n    configurationImported$;\n\n    import(jsonValue: string);\n\n    export(changesOnly): string;\n\n    clearLocalChanges();\n\n}\n\nexport class ConfigurationServiceConstants {\n\n    public static readonly appVersion: string = '3.1.0';\n\n    // ***Specify default configurations here***\n    public static readonly defaultLanguage: string = 'en';\n    public static readonly defaultHomeUrl: string = '/';\n    public static readonly defaultThemeId: number = 1;\n    public static readonly defaultShowDashboardStatistics: boolean = true;\n    public static readonly defaultShowDashboardNotifications: boolean = true;\n    public static readonly defaultShowDashboardTodo: boolean = false;\n    public static readonly defaultShowDashboardBanner: boolean = true;\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DBkeys {\n\n    public static readonly CURRENT_USER = 'current_user';\n    public static readonly USER_PERMISSIONS = 'user_permissions';\n    public static readonly ACCESS_TOKEN = 'access_token';\n    public static readonly REFRESH_TOKEN = 'refresh_token';\n    public static readonly TOKEN_EXPIRES_IN = 'expires_in';\n\n    public static readonly REMEMBER_ME = 'remember_me';\n\n    public static readonly LANGUAGE = 'language';\n    public static readonly HOME_URL = 'home_url';\n    public static readonly THEME_ID = 'themeId';\n    public static readonly SHOW_DASHBOARD_STATISTICS = 'show_dashboard_statistics';\n    public static readonly SHOW_DASHBOARD_NOTIFICATIONS = 'show_dashboard_notifications';\n    public static readonly SHOW_DASHBOARD_TODO = 'show_dashboard_todo';\n    public static readonly SHOW_DASHBOARD_BANNER = 'show_dashboard_banner';\n}\n","import { Injectable } from '@angular/core';\nimport { HttpResponseBase, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\n// Supress angular complication error\n// @dynamic\n\n@Injectable()\nexport class Utilities {\n    public static readonly captionAndMessageSeparator = ':';\n    public static readonly noNetworkMessageCaption = 'No Network';\n    public static readonly noNetworkMessageDetail = 'The server cannot be reached';\n    public static readonly accessDeniedMessageCaption = 'Access Denied!';\n    public static readonly accessDeniedMessageDetail = '';\n    public static readonly notFoundMessageCaption = 'Not Found';\n    public static readonly notFoundMessageDetail = 'The target resource cannot be found';\n\n    public static cookies =\n        {\n            getItem: (sKey) => {\n                return decodeURIComponent(document.cookie.replace(new RegExp('(?:(?:^|.*;)\\\\s*' + encodeURIComponent(sKey).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') + '\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$'), '$1')) || null;\n            },\n            setItem: (sKey, sValue, vEnd, sPath, sDomain, bSecure) => {\n                if (!sKey || /^(?:expires|max\\-age|path|domain|secure)$/i.test(sKey)) {\n                    return false;\n                }\n\n                let sExpires = '';\n\n                if (vEnd) {\n                    switch (vEnd.constructor) {\n                        case Number:\n                            sExpires = vEnd === Infinity ? '; expires=Fri, 31 Dec 9999 23:59:59 GMT' : '; max-age=' + vEnd;\n                            break;\n                        case String:\n                            sExpires = '; expires=' + vEnd;\n                            break;\n                        case Date:\n                            sExpires = '; expires=' + vEnd.toUTCString();\n                            break;\n                    }\n                }\n\n                document.cookie = encodeURIComponent(sKey) + '=' + encodeURIComponent(sValue) + sExpires + (sDomain ? '; domain=' + sDomain : '') + (sPath ? '; path=' + sPath : '') + (bSecure ? '; secure' : '');\n                return true;\n            },\n            removeItem: (sKey, sPath, sDomain) => {\n                if (!sKey) {\n                    return false;\n                }\n                document.cookie = encodeURIComponent(sKey) + '=; expires=Thu, 01 Jan 1970 00:00:00 GMT' + (sDomain ? '; domain=' + sDomain : '') + (sPath ? '; path=' + sPath : '');\n                return true;\n            },\n            hasItem: (sKey) => {\n                return (new RegExp('(?:^|;\\\\s*)' + encodeURIComponent(sKey).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') + '\\\\s*\\\\=')).test(document.cookie);\n            },\n            keys: () => {\n                const aKeys = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, '').split(/\\s*(?:\\=[^;]*)?;\\s*/);\n                for (let nIdx = 0; nIdx < aKeys.length; nIdx++) { aKeys[nIdx] = decodeURIComponent(aKeys[nIdx]); }\n                return aKeys;\n            }\n        };\n\n    public static getHttpResponseMessages(data: HttpResponseBase | any): string[] {\n        const responses: string[] = [];\n\n        if (data instanceof HttpResponseBase) {\n            if (this.checkNoNetwork(data)) {\n                responses.push(`${this.noNetworkMessageCaption}${this.captionAndMessageSeparator} ${this.noNetworkMessageDetail}`);\n            } else {\n                const responseObject = this.getResponseBody(data);\n\n                if (responseObject && (typeof responseObject === 'object' || responseObject instanceof Object)) {\n\n                    for (const key in responseObject) {\n                        if (key) {\n                            responses.push(`${key}${this.captionAndMessageSeparator} ${responseObject[key]}`);\n                        } else if (responseObject[key]) {\n                            responses.push(responseObject[key].toString());\n                        }\n                    }\n                }\n            }\n\n            if (!responses.length) {\n                if ((data as any).body) {\n                    responses.push(`body: ${(data as any).body}`);\n                }\n\n                if ((data as any).error) {\n                    responses.push(`error: ${(data as any).error}`);\n                }\n            }\n        }\n\n        if (!responses.length) {\n            if (this.getResponseBody(data)) {\n                responses.push(this.getResponseBody(data).toString());\n            } else {\n                responses.push(data.toString());\n            }\n        }\n\n        if (this.checkAccessDenied(data)) {\n            responses.splice(0, 0, `${this.accessDeniedMessageCaption}${this.captionAndMessageSeparator} ${this.accessDeniedMessageDetail}`);\n        }\n\n        if (this.checkNotFound(data)) {\n            let message = `${this.notFoundMessageCaption}${this.captionAndMessageSeparator} ${this.notFoundMessageDetail}`;\n            if (data.url) {\n                message += `. ${data.url}`;\n            }\n\n            responses.splice(0, 0, message);\n        }\n\n        return responses;\n    }\n\n    public static getHttpResponseMessage(data: HttpResponseBase | any): string {\n        const httpMessage =\n            Utilities.findHttpResponseMessage(Utilities.noNetworkMessageCaption, data) ||\n            Utilities.findHttpResponseMessage(Utilities.notFoundMessageCaption, data) ||\n            Utilities.findHttpResponseMessage('error_description', data) ||\n            Utilities.findHttpResponseMessage('error', data) ||\n            Utilities.getHttpResponseMessages(data).join();\n\n        return httpMessage;\n    }\n\n    public static findHttpResponseMessage(messageToFind: string, data: HttpResponse<any> | any, seachInCaptionOnly = true, includeCaptionInResult = false): string {\n        const searchString = messageToFind.toLowerCase();\n        const httpMessages = this.getHttpResponseMessages(data);\n\n        for (const message of httpMessages) {\n            const fullMessage = Utilities.splitInTwo(message, this.captionAndMessageSeparator);\n\n            if (fullMessage.firstPart && fullMessage.firstPart.toLowerCase().indexOf(searchString) != -1) {\n                return includeCaptionInResult ? message : fullMessage.secondPart || fullMessage.firstPart;\n            }\n        }\n\n        if (!seachInCaptionOnly) {\n            for (const message of httpMessages) {\n\n                if (message.toLowerCase().indexOf(searchString) != -1) {\n                    if (includeCaptionInResult) {\n                        return message;\n                    } else {\n                        const fullMessage = Utilities.splitInTwo(message, this.captionAndMessageSeparator);\n                        return fullMessage.secondPart || fullMessage.firstPart;\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    public static getResponseBody(response: HttpResponseBase) {\n        if (response instanceof HttpResponse) {\n            return response.body;\n        }\n\n        if (response instanceof HttpErrorResponse) {\n            return response.error || response.message || response.statusText;\n        }\n    }\n\n    public static checkNoNetwork(response: HttpResponseBase) {\n        if (response instanceof HttpResponseBase) {\n            return response.status == 0;\n        }\n\n        return false;\n    }\n\n    public static checkAccessDenied(response: HttpResponseBase) {\n        if (response instanceof HttpResponseBase) {\n            return response.status == 403;\n        }\n\n        return false;\n    }\n\n    public static checkNotFound(response: HttpResponseBase) {\n        if (response instanceof HttpResponseBase) {\n            return response.status == 404;\n        }\n\n        return false;\n    }\n\n    public static checkIsLocalHost(url: string, base?: string) {\n        if (url) {\n            const location = new URL(url, base);\n            return location.hostname === 'localhost' || location.hostname === '127.0.0.1';\n        }\n\n        return false;\n    }\n\n    public static getQueryParamsFromString(paramString: string) {\n        if (!paramString) {\n            return null;\n        }\n\n        const params: { [key: string]: string } = {};\n\n        for (const param of paramString.split('&')) {\n            const keyValue = Utilities.splitInTwo(param, '=');\n            params[keyValue.firstPart] = keyValue.secondPart;\n        }\n\n        return params;\n    }\n\n    public static splitInTwo(text: string, separator: string): { firstPart: string, secondPart: string } {\n        const separatorIndex = text.indexOf(separator);\n\n        if (separatorIndex == -1) {\n            return { firstPart: text, secondPart: null };\n        }\n\n        const part1 = text.substr(0, separatorIndex).trim();\n        const part2 = text.substr(separatorIndex + 1).trim();\n\n        return { firstPart: part1, secondPart: part2 };\n    }\n\n    public static safeStringify(object) {\n\n        let result: string;\n\n        try {\n            result = JSON.stringify(object);\n            return result;\n        } catch (error) {\n\n        }\n\n        const simpleObject = {};\n\n        for (const prop in object) {\n            if (!object.hasOwnProperty(prop)) {\n                continue;\n            }\n            if (typeof (object[prop]) == 'object') {\n                continue;\n            }\n            if (typeof (object[prop]) == 'function') {\n                continue;\n            }\n            simpleObject[prop] = object[prop];\n        }\n\n        result = '[***Sanitized Object***]: ' + JSON.stringify(simpleObject);\n\n        return result;\n    }\n\n    public static JsonTryParse(value: string) {\n        try {\n            return JSON.parse(value);\n        } catch (e) {\n            if (value === 'undefined') {\n                return void 0;\n            }\n            return value;\n        }\n    }\n\n    public static TestIsObjectEmpty(obj: any) {\n        for (const prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    public static TestIsUndefined(value: any) {\n        return typeof value === 'undefined';\n        // return value === undefined;\n    }\n\n    public static TestIsString(value: any) {\n        return typeof value === 'string' || value instanceof String;\n    }\n\n    public static capitalizeFirstLetter(text: string) {\n        if (text) {\n            return text.charAt(0).toUpperCase() + text.slice(1);\n        } else {\n            return text;\n        }\n    }\n\n    public static toTitleCase(text: string) {\n        return text.replace(/\\w\\S*/g, (subString) => {\n            return subString.charAt(0).toUpperCase() + subString.substr(1).toLowerCase();\n        });\n    }\n\n    public static toLowerCase(items: string);\n    public static toLowerCase(items: string[]);\n    public static toLowerCase(items: any): string | string[] {\n\n        if (items instanceof Array) {\n            const loweredRoles: string[] = [];\n\n            for (let i = 0; i < items.length; i++) {\n                loweredRoles[i] = items[i].toLowerCase();\n            }\n\n            return loweredRoles;\n        } else if (typeof items === 'string' || items instanceof String) {\n            return items.toLowerCase();\n        }\n    }\n\n    public static uniqueId() {\n        return this.randomNumber(1000000, 9000000).toString();\n    }\n\n    public static randomNumber(min: number, max: number) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n\n    public static baseUrl() {\n        let base = '';\n\n        if (window.location.origin) {\n            base = window.location.origin;\n        } else {\n            base = window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n        }\n\n        return base.replace(/\\/$/, '');\n    }\n\n    public static printDateOnly(date: Date) {\n\n        date = new Date(date);\n\n        const dayNames = new Array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday');\n        const monthNames = new Array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December');\n\n        const dayOfWeek = date.getDay();\n        const dayOfMonth = date.getDate();\n        let sup = '';\n        const month = date.getMonth();\n        const year = date.getFullYear();\n\n        if (dayOfMonth == 1 || dayOfMonth == 21 || dayOfMonth == 31) {\n            sup = 'st';\n        } else if (dayOfMonth == 2 || dayOfMonth == 22) {\n            sup = 'nd';\n        } else if (dayOfMonth == 3 || dayOfMonth == 23) {\n            sup = 'rd';\n        } else {\n            sup = 'th';\n        }\n\n        const dateString = dayNames[dayOfWeek] + ', ' + dayOfMonth + sup + ' ' + monthNames[month] + ' ' + year;\n\n        return dateString;\n    }\n\n    public static printTimeOnly(date: Date) {\n\n        date = new Date(date);\n\n        let period = '';\n        let minute = date.getMinutes().toString();\n        let hour = date.getHours();\n\n        period = hour < 12 ? 'AM' : 'PM';\n\n        if (hour == 0) {\n            hour = 12;\n        }\n        if (hour > 12) {\n            hour = hour - 12;\n        }\n\n        if (minute.length == 1) {\n            minute = '0' + minute;\n        }\n\n        const timeString = hour + ':' + minute + ' ' + period;\n\n\n        return timeString;\n    }\n\n    public static printDate(date: Date, separator = 'at') {\n        return `${Utilities.printDateOnly(date)} ${separator} ${Utilities.printTimeOnly(date)}`;\n    }\n\n    public static printFriendlyDate(date: Date, separator = '-') {\n        const today = new Date(); today.setHours(0, 0, 0, 0);\n        const yesterday = new Date(today); yesterday.setDate(yesterday.getDate() - 1);\n        const test = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n        if (test.toDateString() == today.toDateString()) {\n            return `Today ${separator} ${Utilities.printTimeOnly(date)}`;\n        }\n        if (test.toDateString() == yesterday.toDateString()) {\n            return `Yesterday ${separator} ${Utilities.printTimeOnly(date)}`;\n        } else {\n            return Utilities.printDate(date, separator);\n        }\n    }\n\n    public static printShortDate(date: Date, separator = '/', dateTimeSeparator = '-') {\n\n        let day = date.getDate().toString();\n        let month = (date.getMonth() + 1).toString();\n        const year = date.getFullYear();\n\n        if (day.length == 1) {\n            day = '0' + day;\n        }\n\n        if (month.length == 1) {\n            month = '0' + month;\n        }\n\n        return `${month}${separator}${day}${separator}${year} ${dateTimeSeparator} ${Utilities.printTimeOnly(date)}`;\n    }\n\n    public static parseDate(date) {\n\n        if (date) {\n\n            if (date instanceof Date) {\n                return date;\n            }\n\n            if (typeof date === 'string' || date instanceof String) {\n                if (date.search(/[a-su-z+]/i) == -1) {\n                    date = date + 'Z';\n                }\n\n                return new Date(date);\n            }\n\n            if (typeof date === 'number' || date instanceof Number) {\n                return new Date(date as any);\n            }\n        }\n    }\n\n    public static printDuration(start: Date, end: Date) {\n\n        start = new Date(start);\n        end = new Date(end);\n\n        // get total seconds between the times\n        let delta = Math.abs(start.valueOf() - end.valueOf()) / 1000;\n\n        // calculate (and subtract) whole days\n        const days = Math.floor(delta / 86400);\n        delta -= days * 86400;\n\n        // calculate (and subtract) whole hours\n        const hours = Math.floor(delta / 3600) % 24;\n        delta -= hours * 3600;\n\n        // calculate (and subtract) whole minutes\n        const minutes = Math.floor(delta / 60) % 60;\n        delta -= minutes * 60;\n\n        // what's left is seconds\n        const seconds = delta % 60;  // in theory the modulus is not required\n\n\n        let printedDays = '';\n\n        if (days) {\n            printedDays = `${days} days`;\n        }\n\n        if (hours) {\n            printedDays += printedDays ? `, ${hours} hours` : `${hours} hours`;\n        }\n\n        if (minutes) {\n            printedDays += printedDays ? `, ${minutes} minutes` : `${minutes} minutes`;\n        }\n\n        if (seconds) {\n            printedDays += printedDays ? ` and ${seconds} seconds` : `${seconds} seconds`;\n        }\n\n\n        if (!printedDays) {\n            printedDays = '0';\n        }\n\n        return printedDays;\n    }\n\n    public static getAge(birthDate, otherDate) {\n        birthDate = new Date(birthDate);\n        otherDate = new Date(otherDate);\n\n        let years = (otherDate.getFullYear() - birthDate.getFullYear());\n\n        if (otherDate.getMonth() < birthDate.getMonth() ||\n            otherDate.getMonth() == birthDate.getMonth() && otherDate.getDate() < birthDate.getDate()) {\n            years--;\n        }\n\n        return years;\n    }\n\n    public static searchArray(searchTerm: string, caseSensitive: boolean, ...values: any[]) {\n        if (!searchTerm) {\n            return true;\n        }\n\n        let filter = searchTerm.trim();\n        let data = values.join();\n\n        if (!caseSensitive) {\n            filter = filter.toLowerCase();\n            data = data.toLowerCase();\n        }\n\n        return data.indexOf(filter) != -1;\n    }\n\n    public static moveArrayItem(array: any[], oldIndex, newIndex) {\n\n        if (oldIndex < 0) {\n            return;\n        }\n\n        if (newIndex < 0) {\n            newIndex += array.length;\n        }\n\n        if (newIndex >= array.length) {\n            let k = newIndex - array.length;\n            while ((k--) + 1) {\n                array.push(undefined);\n            }\n        }\n\n        array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);\n    }\n\n    public static expandCamelCase(text: string) {\n\n        if (!text) {\n            return text;\n        }\n\n        return text.replace(/([A-Z][a-z]+)/g, ' $1')\n            .replace(/([A-Z][A-Z]+)/g, ' $1')\n            .replace(/([^A-Za-z ]+)/g, ' $1');\n    }\n\n    public static testIsAbsoluteUrl(url: string) {\n\n        const r = new RegExp('^(?:[a-z]+:)?//', 'i');\n        return r.test(url);\n    }\n\n    public static convertToAbsoluteUrl(url: string) {\n\n        return Utilities.testIsAbsoluteUrl(url) ? url : '//' + url;\n    }\n\n    public static removeNulls(obj) {\n        const isArray = obj instanceof Array;\n\n        for (const k in obj) {\n            if (obj[k] === null) {\n                isArray ? obj.splice(k, 1) : delete obj[k];\n            } else if (typeof obj[k] == 'object') {\n                Utilities.removeNulls(obj[k]);\n            }\n\n            if (isArray && obj.length == k) {\n                Utilities.removeNulls(obj);\n            }\n        }\n\n        return obj;\n    }\n\n    public static debounce(func: (...args) => any, wait: number, immediate?: boolean) {\n        let timeout;\n\n        return function() {\n            const context = this;\n            const args_ = arguments;\n\n            const later = function() {\n                timeout = null;\n                if (!immediate) {\n                    func.apply(context, args_);\n                }\n            };\n\n            const callNow = immediate && !timeout;\n\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n\n            if (callNow) {\n                func.apply(context, args_);\n            }\n        };\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    baseUrl: null, // Change this to the address of your backend API if different from frontend address\n    tokenUrl: null, // For IdentityServer/Authorization Server API. You can set to null if same as baseUrl\n    loginUrl: '/login'\n};\n","export abstract class ServiceProviderBase<T> {\n    abstract get(): T;\n}\n","import { Injectable } from '@angular/core';\nimport { ServiceProviderBase } from './service-provider-base';\nimport { IAlertServiceContract } from '../contracts/alert.service-contract';\n\n@Injectable()\nexport abstract class AlertServiceAbstractProvider\n    extends ServiceProviderBase<IAlertServiceContract> {\n}\n\n","import { Injectable } from '@angular/core';\nimport { ServiceProviderBase } from './service-provider-base';\nimport { ITranslationServiceContract } from '../contracts/translation.service-contract';\n\n@Injectable()\nexport abstract class TranslationServiceAbstractProvider\n    extends ServiceProviderBase<ITranslationServiceContract> {\n}\n","import { Injectable } from '@angular/core';\nimport { ServiceProviderBase } from './service-provider-base';\nimport { IConfigurationServiceContract } from '../contracts/configuration.service-contract';\n\n@Injectable()\nexport abstract class ConfigurationServiceAbstractProvider\n    extends ServiceProviderBase<IConfigurationServiceContract> {\n}\n","import { Injectable } from '@angular/core';\nimport { ServiceProviderBase } from './service-provider-base';\nimport { ILocalStoreManagerContract } from '../contracts/local-store-manager.service-contract';\n\n@Injectable()\nexport abstract class LocalStoreManagerServiceAbstractProvider\n    extends ServiceProviderBase<ILocalStoreManagerContract> {\n}\n","import { Injectable } from '@angular/core';\nimport { ServiceProviderBase } from './service-provider-base';\nimport { IThemeManagerContract } from '../contracts/theme-manager.contract';\n\n@Injectable()\nexport abstract class ThemeManagerAbstractProvider\n    extends ServiceProviderBase<IThemeManagerContract> {\n}\n","import { NgModule } from '@angular/core';\nimport { Utilities } from './services/utilities';\nimport { DBkeys } from './services/db-keys';\n\n@NgModule({\n    declarations: [],\n    imports: [\n    ],\n    exports: [],\n    providers: [\n        Utilities,\n        DBkeys\n    ]\n})\nexport class NgxAppkitContractsAlphaModule { }\n"]}